name: Create release artifacts

env:
  project_url: "https://github.com/${{github.repository}}"
  latest_manifest_url: "https://github.com/${{github.repository}}/releases/latest/download/system.json"
  release_archive_name: "fvtt-fabulaultima.zip"
  release_archive_url: "https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/${{env.release_archive_name}}"

on:
  release:
    types: [published]


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Update manifest
        uses: cschleiden/replace-tokens@v1
        with:
          files: 'system.json'
        env:
          VERSION: ${{steps.get_version.outputs.version-without-v}}
          URL: ${{ env.project_url }}
          MANIFEST: ${{ env.latest_manifest_url }}
          DOWNLOAD: ${{ env.release_module_url }}

      - name: Create Archive
        run: |
          zip                                    \
            `# Options`                          \
            --recurse-paths                      \
            `# The name of the output file`      \
             ./${{env.release_archive_name}}         \
            `# The files that will be included.` \
            system.json                          \
            README.md                            \
            LICENSE.txt                          \
            assets/                              \
            lang/                                \
            module/                              \
            styles/                              \
            templates/                           

      - name: Add files to release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './system.json, ./${{env.release_archive_name}}'
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
